{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yyanz\\\\Desktop\\\\PRUEBA\\\\frontend\\\\front\\\\src\\\\components\\\\plantilla.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(StickyHeadTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n_c = StickyHeadTable;\nvar _c;\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","jsxDEV","_jsxDEV","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","_s","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","className","children","stickyHeader","map","column","style","fileName","_jsxFileName","lineNumber","columnNumber","slice","row","hover","role","tabIndex","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/yyanz/Desktop/PRUEBA/frontend/front/src/components/plantilla.js"],"sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}